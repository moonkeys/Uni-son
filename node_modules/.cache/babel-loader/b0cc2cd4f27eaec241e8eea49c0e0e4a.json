{"remainingRequest":"C:\\Users\\gmax1\\Documents\\Travail\\Uni-son\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\gmax1\\Documents\\Travail\\Uni-son\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\gmax1\\Documents\\Travail\\Uni-son\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\gmax1\\Documents\\Travail\\Uni-son\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\gmax1\\Documents\\Travail\\Uni-son\\src\\components\\Pagination.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\gmax1\\Documents\\Travail\\Uni-son\\src\\components\\Pagination.vue","mtime":1552671268138},{"path":"C:\\Users\\gmax1\\Documents\\Travail\\Uni-son\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1552671160995},{"path":"C:\\Users\\gmax1\\Documents\\Travail\\Uni-son\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1552671256335},{"path":"C:\\Users\\gmax1\\Documents\\Travail\\Uni-son\\node_modules\\babel-loader\\lib\\index.js","mtime":1552671158151},{"path":"C:\\Users\\gmax1\\Documents\\Travail\\Uni-son\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1552671160995},{"path":"C:\\Users\\gmax1\\Documents\\Travail\\Uni-son\\node_modules\\vue-loader\\lib\\index.js","mtime":1552671259992}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: \"pagination\",\n  props: {\n    type: {\n      type: String,\n      default: \"primary\",\n      validator: function validator(value) {\n        return [\"default\", \"primary\", \"danger\", \"success\", \"warning\", \"info\", \"rose\"].includes(value);\n      }\n    },\n    withText: Boolean,\n    noArrows: Boolean,\n    pageCount: {\n      type: Number,\n      default: 0\n    },\n    perPage: {\n      type: Number,\n      default: 10\n    },\n    total: {\n      type: Number,\n      default: 0\n    },\n    value: {\n      type: Number,\n      default: 1\n    }\n  },\n  computed: {\n    paginationClass: function paginationClass() {\n      return \"pagination-\".concat(this.type);\n    },\n    totalPages: function totalPages() {\n      if (this.pageCount > 0) return this.pageCount;\n\n      if (this.total > 0) {\n        return Math.ceil(this.total / this.perPage);\n      }\n\n      return 1;\n    },\n    pagesToDisplay: function pagesToDisplay() {\n      if (this.totalPages > 0 && this.totalPages < this.defaultPagesToDisplay) {\n        return this.totalPages;\n      }\n\n      return this.defaultPagesToDisplay;\n    },\n    minPage: function minPage() {\n      if (this.value >= this.pagesToDisplay) {\n        var pagesToAdd = Math.floor(this.pagesToDisplay / 2);\n        var newMaxPage = pagesToAdd + this.value;\n\n        if (newMaxPage > this.totalPages) {\n          return this.totalPages - this.pagesToDisplay + 1;\n        }\n\n        return this.value - pagesToAdd;\n      } else {\n        return 1;\n      }\n    },\n    maxPage: function maxPage() {\n      if (this.value >= this.pagesToDisplay) {\n        var pagesToAdd = Math.floor(this.pagesToDisplay / 2);\n        var newMaxPage = pagesToAdd + this.value;\n\n        if (newMaxPage < this.totalPages) {\n          return newMaxPage;\n        } else {\n          return this.totalPages;\n        }\n      } else {\n        return this.pagesToDisplay;\n      }\n    }\n  },\n  data: function data() {\n    return {\n      defaultPagesToDisplay: 5\n    };\n  },\n  methods: {\n    range: function range(min, max) {\n      var arr = [];\n\n      for (var i = min; i <= max; i++) {\n        arr.push(i);\n      }\n\n      return arr;\n    },\n    changePage: function changePage(item) {\n      this.$emit(\"input\", item);\n    },\n    nextPage: function nextPage() {\n      if (this.value < this.totalPages) {\n        this.$emit(\"input\", this.value + 1);\n      }\n    },\n    prevPage: function prevPage() {\n      if (this.value > 1) {\n        this.$emit(\"input\", this.value - 1);\n      }\n    }\n  },\n  watch: {\n    perPage: function perPage() {\n      this.$emit(\"input\", 1);\n    },\n    total: function total() {\n      this.$emit(\"input\", 1);\n    }\n  }\n};",{"version":3,"sources":["Pagination.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <ul class=\"pagination\" :class=\"paginationClass\">\r\n    <li class=\"page-item prev-page\" :class=\"{ disabled: value === 1, 'no-arrows': noArrows }\">\r\n      <a class=\"page-link\" aria-label=\"Previous\" @click=\"prevPage\">\r\n        <template v-if=\"withText\">Prev</template>\r\n        <i class=\"fas fa-angle-double-left\" v-else></i>\r\n      </a>\r\n    </li>\r\n    <li\r\n      class=\"page-item\"\r\n      v-for=\"item in range(minPage, maxPage)\"\r\n      :key=\"item\"\r\n      :class=\"{ active: value === item }\"\r\n    >\r\n      <a class=\"page-link\" @click=\"changePage(item)\">{{ item }}</a>\r\n    </li>\r\n    <li\r\n      class=\"page-item page-pre next-page\"\r\n      :class=\"{ disabled: value === totalPages, 'no-arrows': noArrows }\"\r\n    >\r\n      <a class=\"page-link\" aria-label=\"Next\" @click=\"nextPage\">\r\n        <template v-if=\"withText\">Next</template>\r\n        <i class=\"fas fa-angle-double-right\" v-else></i>\r\n      </a>\r\n    </li>\r\n  </ul>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"pagination\",\r\n  props: {\r\n    type: {\r\n      type: String,\r\n      default: \"primary\",\r\n      validator: value => {\r\n        return [\r\n          \"default\",\r\n          \"primary\",\r\n          \"danger\",\r\n          \"success\",\r\n          \"warning\",\r\n          \"info\",\r\n          \"rose\"\r\n        ].includes(value);\r\n      }\r\n    },\r\n    withText: Boolean,\r\n    noArrows: Boolean,\r\n    pageCount: {\r\n      type: Number,\r\n      default: 0\r\n    },\r\n    perPage: {\r\n      type: Number,\r\n      default: 10\r\n    },\r\n    total: {\r\n      type: Number,\r\n      default: 0\r\n    },\r\n    value: {\r\n      type: Number,\r\n      default: 1\r\n    }\r\n  },\r\n  computed: {\r\n    paginationClass() {\r\n      return `pagination-${this.type}`;\r\n    },\r\n    totalPages() {\r\n      if (this.pageCount > 0) return this.pageCount;\r\n      if (this.total > 0) {\r\n        return Math.ceil(this.total / this.perPage);\r\n      }\r\n      return 1;\r\n    },\r\n    pagesToDisplay() {\r\n      if (this.totalPages > 0 && this.totalPages < this.defaultPagesToDisplay) {\r\n        return this.totalPages;\r\n      }\r\n      return this.defaultPagesToDisplay;\r\n    },\r\n    minPage() {\r\n      if (this.value >= this.pagesToDisplay) {\r\n        const pagesToAdd = Math.floor(this.pagesToDisplay / 2);\r\n        const newMaxPage = pagesToAdd + this.value;\r\n        if (newMaxPage > this.totalPages) {\r\n          return this.totalPages - this.pagesToDisplay + 1;\r\n        }\r\n        return this.value - pagesToAdd;\r\n      } else {\r\n        return 1;\r\n      }\r\n    },\r\n    maxPage() {\r\n      if (this.value >= this.pagesToDisplay) {\r\n        const pagesToAdd = Math.floor(this.pagesToDisplay / 2);\r\n        const newMaxPage = pagesToAdd + this.value;\r\n        if (newMaxPage < this.totalPages) {\r\n          return newMaxPage;\r\n        } else {\r\n          return this.totalPages;\r\n        }\r\n      } else {\r\n        return this.pagesToDisplay;\r\n      }\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      defaultPagesToDisplay: 5\r\n    };\r\n  },\r\n  methods: {\r\n    range(min, max) {\r\n      let arr = [];\r\n      for (let i = min; i <= max; i++) {\r\n        arr.push(i);\r\n      }\r\n      return arr;\r\n    },\r\n    changePage(item) {\r\n      this.$emit(\"input\", item);\r\n    },\r\n    nextPage() {\r\n      if (this.value < this.totalPages) {\r\n        this.$emit(\"input\", this.value + 1);\r\n      }\r\n    },\r\n    prevPage() {\r\n      if (this.value > 1) {\r\n        this.$emit(\"input\", this.value - 1);\r\n      }\r\n    }\r\n  },\r\n  watch: {\r\n    perPage() {\r\n      this.$emit(\"input\", 1);\r\n    },\r\n    total() {\r\n      this.$emit(\"input\", 1);\r\n    }\r\n  }\r\n};\r\n</script>\r\n"],"sourceRoot":"src/components"}]}