{"remainingRequest":"C:\\Users\\gmax1\\Documents\\Travail\\Projets_perso\\2018\\Uni-son\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\gmax1\\Documents\\Travail\\Projets_perso\\2018\\Uni-son\\src\\layout\\MainNavbar.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\gmax1\\Documents\\Travail\\Projets_perso\\2018\\Uni-son\\src\\layout\\MainNavbar.vue","mtime":1552606235347},{"path":"C:\\Users\\gmax1\\Documents\\Travail\\Projets_perso\\2018\\Uni-son\\node_modules\\babel-loader\\lib\\index.js","mtime":1552606151110},{"path":"C:\\Users\\gmax1\\Documents\\Travail\\Projets_perso\\2018\\Uni-son\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1552606155551},{"path":"C:\\Users\\gmax1\\Documents\\Travail\\Projets_perso\\2018\\Uni-son\\node_modules\\vue-loader\\lib\\index.js","mtime":1552606202199}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nlet resizeTimeout;\r\nfunction resizeThrottler(actualResizeHandler) {\r\n  // ignore resize events as long as an actualResizeHandler execution is in the queue\r\n  if (!resizeTimeout) {\r\n    resizeTimeout = setTimeout(() => {\r\n      resizeTimeout = null;\r\n      actualResizeHandler();\r\n\r\n      // The actualResizeHandler will execute at a rate of 15fps\r\n    }, 66);\r\n  }\r\n}\r\n\r\nimport MobileMenu from \"@/layout/MobileMenu\";\r\nexport default {\r\n  components: {\r\n    MobileMenu\r\n  },\r\n  props: {\r\n    type: {\r\n      type: String,\r\n      default: \"white\",\r\n      validator(value) {\r\n        return [\r\n          \"white\",\r\n          \"default\",\r\n          \"primary\",\r\n          \"danger\",\r\n          \"success\",\r\n          \"warning\",\r\n          \"info\"\r\n        ].includes(value);\r\n      }\r\n    },\r\n    colorOnScroll: {\r\n      type: Number,\r\n      default: 0\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      extraNavClasses: \"\",\r\n      toggledClass: false\r\n    };\r\n  },\r\n  computed: {\r\n    showDownload() {\r\n      const excludedRoutes = [\"login\", \"landing\", \"profile\"];\r\n      return excludedRoutes.every(r => r !== this.$route.name);\r\n    }\r\n  },\r\n  methods: {\r\n    bodyClick() {\r\n      let bodyClick = document.getElementById(\"bodyClick\");\r\n\r\n      if (bodyClick === null) {\r\n        let body = document.querySelector(\"body\");\r\n        let elem = document.createElement(\"div\");\r\n        elem.setAttribute(\"id\", \"bodyClick\");\r\n        body.appendChild(elem);\r\n\r\n        let bodyClick = document.getElementById(\"bodyClick\");\r\n        bodyClick.addEventListener(\"click\", this.toggleNavbarMobile);\r\n      } else {\r\n        bodyClick.remove();\r\n      }\r\n    },\r\n    toggleNavbarMobile() {\r\n      this.NavbarStore.showNavbar = !this.NavbarStore.showNavbar;\r\n      this.toggledClass = !this.toggledClass;\r\n      this.bodyClick();\r\n    },\r\n    handleScroll() {\r\n      let scrollValue =\r\n        document.body.scrollTop || document.documentElement.scrollTop;\r\n      let navbarColor = document.getElementById(\"toolbar\");\r\n      this.currentScrollValue = scrollValue;\r\n      if (this.colorOnScroll > 0 && scrollValue > this.colorOnScroll) {\r\n        this.extraNavClasses = `md-${this.type}`;\r\n        navbarColor.classList.remove(\"md-transparent\");\r\n      } else {\r\n        if (this.extraNavClasses) {\r\n          this.extraNavClasses = \"\";\r\n          navbarColor.classList.add(\"md-transparent\");\r\n        }\r\n      }\r\n    },\r\n    scrollListener() {\r\n      resizeThrottler(this.handleScroll);\r\n    },\r\n    scrollToElement() {\r\n      let element_id = document.getElementById(\"downloadSection\");\r\n      if (element_id) {\r\n        element_id.scrollIntoView({ block: \"end\", behavior: \"smooth\" });\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    document.addEventListener(\"scroll\", this.scrollListener);\r\n  },\r\n  beforeDestroy() {\r\n    document.removeEventListener(\"scroll\", this.scrollListener);\r\n  }\r\n};\r\n",{"version":3,"sources":["MainNavbar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsfile":"MainNavbar.vue","sourceRoot":"src/layout","sourcesContent":["<template>\r\n  <md-toolbar\r\n    id=\"toolbar\"\r\n    md-elevation=\"0\"\r\n    class=\"md-transparent md-absolute\"\r\n    :class=\"extraNavClasses\"\r\n    :color-on-scroll=\"colorOnScroll\"\r\n    align=\"center\"\r\n  >\r\n    <div class=\"md-toolbar-row md-collapse-lateral\">\r\n      <div class=\"md-toolbar-section-start\">\r\n        <h2 class=\"md-title\"><img src=\"@/assets/img/affiche/logocolore.png\" width=\"100px\" ></h2>\r\n      </div>\r\n      <div class=\"md-toolbar-section-end\">\r\n        <md-button\r\n          class=\"md-just-icon md-simple md-toolbar-toggle\"\r\n          :class=\"{ toggled: toggledClass }\"\r\n          @click=\"toggleNavbarMobile()\"\r\n        >\r\n          <span class=\"icon-bar\"></span>\r\n          <span class=\"icon-bar\"></span>\r\n          <span class=\"icon-bar\"></span>\r\n        </md-button>\r\n\r\n        <div class=\"md-collapse\">\r\n          <div class=\"md-collapse-wrapper\">\r\n            <mobile-menu nav-mobile-section-start=\"false\">\r\n              <!-- Here you can add your items from the section-start of your toolbar -->\r\n            </mobile-menu>\r\n            <md-list>\r\n              <md-list-item target=\"_blank\">\r\n                <router-link to=\"accueil\">\r\n                  <i class=\"material-icons\">home</i>\r\n                  <p>Accueil</p>\r\n                </router-link>\r\n              </md-list-item>\r\n              <md-list-item target=\"_blank\">\r\n                <router-link to=\"artistes\">\r\n                  <i class=\"material-icons\">music_note</i>\r\n                  <p>Artistes</p>\r\n                </router-link>\r\n              </md-list-item>\r\n              <li class=\"md-list-item\">\r\n                <a\r\n                  href=\"javascript:void(0)\"\r\n                  class=\"md-list-item-router md-list-item-container md-button-clean dropdown\"\r\n                >\r\n                  <div class=\"md-list-item-content\">\r\n                    <drop-down direction=\"down\">\r\n                      <md-button\r\n                        slot=\"title\"\r\n                        class=\"md-button md-button-link md-white md-simple dropdown-toggle\"\r\n                        data-toggle=\"dropdown\"\r\n                      >\r\n                        <i class=\"material-icons\">monochrome_photos</i>\r\n                        <p>Autres Editions</p>\r\n                      </md-button>\r\n                      <ul class=\"dropdown-menu dropdown-with-icons\">\r\n                        <li>\r\n                          <router-link to=\"2018\">\r\n                            <p>2018</p>\r\n                          </router-link>\r\n                        </li>\r\n                       <!-- <li>\r\n                          <routerLink to=\"2017\">\r\n                            <p>2017</p>\r\n                          </routerLink>\r\n                        </li>-->\r\n                      </ul>\r\n                    </drop-down>\r\n                  </div>\r\n                </a>\r\n              </li>\r\n              <md-list-item href=\"https://billetterie.bde.utt.fr/\" target=\"_blank\">\r\n                <i class=\"fas fa-ticket-alt\"></i>\r\n                <p>Billeterie</p>\r\n              </md-list-item>\r\n             <!-- <md-list-item target=\"_blank\">\r\n                <router-link to=\"nouscontacter\">\r\n                  <i class=\"material-icons\">contacts</i>\r\n                  <p>Contact</p>\r\n                </router-link>\r\n              </md-list-item> -->\r\n              <md-list-item href=\"https://www.facebook.com/UniSonTroyes/\" target=\"_blank\">\r\n                <i class=\"fab fa-facebook-square\"></i>\r\n                <p class=\"hidden-lg\">Facebook</p>\r\n                <md-tooltip md-direction=\"bottom\">Like nous sur Facebook</md-tooltip>\r\n              </md-list-item>\r\n              <md-list-item href=\"https://www.instagram.com/pulsationutt/?hl=fr\" target=\"_blank\">\r\n                <i class=\"fab fa-instagram\"></i>\r\n                <p class=\"hidden-lg\">Instagram</p>\r\n                <md-tooltip md-direction=\"bottom\">Follow nous sur Instagram</md-tooltip>\r\n              </md-list-item>\r\n            </md-list>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </md-toolbar>\r\n</template>\r\n\r\n<script>\r\nlet resizeTimeout;\r\nfunction resizeThrottler(actualResizeHandler) {\r\n  // ignore resize events as long as an actualResizeHandler execution is in the queue\r\n  if (!resizeTimeout) {\r\n    resizeTimeout = setTimeout(() => {\r\n      resizeTimeout = null;\r\n      actualResizeHandler();\r\n\r\n      // The actualResizeHandler will execute at a rate of 15fps\r\n    }, 66);\r\n  }\r\n}\r\n\r\nimport MobileMenu from \"@/layout/MobileMenu\";\r\nexport default {\r\n  components: {\r\n    MobileMenu\r\n  },\r\n  props: {\r\n    type: {\r\n      type: String,\r\n      default: \"white\",\r\n      validator(value) {\r\n        return [\r\n          \"white\",\r\n          \"default\",\r\n          \"primary\",\r\n          \"danger\",\r\n          \"success\",\r\n          \"warning\",\r\n          \"info\"\r\n        ].includes(value);\r\n      }\r\n    },\r\n    colorOnScroll: {\r\n      type: Number,\r\n      default: 0\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      extraNavClasses: \"\",\r\n      toggledClass: false\r\n    };\r\n  },\r\n  computed: {\r\n    showDownload() {\r\n      const excludedRoutes = [\"login\", \"landing\", \"profile\"];\r\n      return excludedRoutes.every(r => r !== this.$route.name);\r\n    }\r\n  },\r\n  methods: {\r\n    bodyClick() {\r\n      let bodyClick = document.getElementById(\"bodyClick\");\r\n\r\n      if (bodyClick === null) {\r\n        let body = document.querySelector(\"body\");\r\n        let elem = document.createElement(\"div\");\r\n        elem.setAttribute(\"id\", \"bodyClick\");\r\n        body.appendChild(elem);\r\n\r\n        let bodyClick = document.getElementById(\"bodyClick\");\r\n        bodyClick.addEventListener(\"click\", this.toggleNavbarMobile);\r\n      } else {\r\n        bodyClick.remove();\r\n      }\r\n    },\r\n    toggleNavbarMobile() {\r\n      this.NavbarStore.showNavbar = !this.NavbarStore.showNavbar;\r\n      this.toggledClass = !this.toggledClass;\r\n      this.bodyClick();\r\n    },\r\n    handleScroll() {\r\n      let scrollValue =\r\n        document.body.scrollTop || document.documentElement.scrollTop;\r\n      let navbarColor = document.getElementById(\"toolbar\");\r\n      this.currentScrollValue = scrollValue;\r\n      if (this.colorOnScroll > 0 && scrollValue > this.colorOnScroll) {\r\n        this.extraNavClasses = `md-${this.type}`;\r\n        navbarColor.classList.remove(\"md-transparent\");\r\n      } else {\r\n        if (this.extraNavClasses) {\r\n          this.extraNavClasses = \"\";\r\n          navbarColor.classList.add(\"md-transparent\");\r\n        }\r\n      }\r\n    },\r\n    scrollListener() {\r\n      resizeThrottler(this.handleScroll);\r\n    },\r\n    scrollToElement() {\r\n      let element_id = document.getElementById(\"downloadSection\");\r\n      if (element_id) {\r\n        element_id.scrollIntoView({ block: \"end\", behavior: \"smooth\" });\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    document.addEventListener(\"scroll\", this.scrollListener);\r\n  },\r\n  beforeDestroy() {\r\n    document.removeEventListener(\"scroll\", this.scrollListener);\r\n  }\r\n};\r\n</script>\r\n"]}]}