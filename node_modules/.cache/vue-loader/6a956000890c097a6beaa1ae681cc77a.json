{"remainingRequest":"C:\\Users\\gmax1\\Documents\\Travail\\Uni-son\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\gmax1\\Documents\\Travail\\Uni-son\\src\\components\\Dropdown.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\gmax1\\Documents\\Travail\\Uni-son\\src\\components\\Dropdown.vue","mtime":1552671268135},{"path":"C:\\Users\\gmax1\\Documents\\Travail\\Uni-son\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1552671160995},{"path":"C:\\Users\\gmax1\\Documents\\Travail\\Uni-son\\node_modules\\babel-loader\\lib\\index.js","mtime":1552671158151},{"path":"C:\\Users\\gmax1\\Documents\\Travail\\Uni-son\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1552671160995},{"path":"C:\\Users\\gmax1\\Documents\\Travail\\Uni-son\\node_modules\\vue-loader\\lib\\index.js","mtime":1552671259992}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nexport default {\r\n  name: \"drop-down\",\r\n  props: {\r\n    direction: {\r\n      type: String,\r\n      default: \"down\"\r\n    },\r\n    multiLevel: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    title: String,\r\n    icon: String\r\n  },\r\n  data() {\r\n    return {\r\n      isOpen: false\r\n    };\r\n  },\r\n  methods: {\r\n    toggleDropDown() {\r\n      if (this.multiLevel) {\r\n        this.isOpen = true;\r\n      } else {\r\n        this.isOpen = !this.isOpen;\r\n      }\r\n    },\r\n    closeDropDown() {\r\n      this.isOpen = false;\r\n    }\r\n  }\r\n};\r\n",{"version":3,"sources":["Dropdown.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAwBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Dropdown.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div\r\n    :class=\"[\r\n      { open: isOpen },\r\n      { dropdown: direction === 'down' },\r\n      { dropup: direction === 'up' }\r\n    ]\"\r\n    @click=\"toggleDropDown\"\r\n    v-click-outside=\"closeDropDown\"\r\n  >\r\n    <slot name=\"title\">\r\n      <a\r\n        class=\"dropdown-toggle\"\r\n        data-toggle=\"dropdown\"\r\n        href=\"javascript:void(0)\"\r\n      >\r\n        <i :class=\"icon\"></i>\r\n        <p>{{ title }}</p>\r\n      </a>\r\n    </slot>\r\n    <slot></slot>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  name: \"drop-down\",\r\n  props: {\r\n    direction: {\r\n      type: String,\r\n      default: \"down\"\r\n    },\r\n    multiLevel: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    title: String,\r\n    icon: String\r\n  },\r\n  data() {\r\n    return {\r\n      isOpen: false\r\n    };\r\n  },\r\n  methods: {\r\n    toggleDropDown() {\r\n      if (this.multiLevel) {\r\n        this.isOpen = true;\r\n      } else {\r\n        this.isOpen = !this.isOpen;\r\n      }\r\n    },\r\n    closeDropDown() {\r\n      this.isOpen = false;\r\n    }\r\n  }\r\n};\r\n</script>\r\n"]}]}